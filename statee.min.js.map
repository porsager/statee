{"version":3,"file":"statee.min.js","sources":["lib/index.js"],"sourcesContent":["export default function() {\n\n  function statee(key, defaultValue) {\n    if (!(key in statee))\n      throw new Error('Key ' + key + ' not defined')\n\n    return value => statee[key] = value\n  }\n\n  const values = {}\n  let observer\n\n  for (let i = 0; i < arguments.length; i++) {\n    const group = arguments[i]\n    if (typeof group === 'function')\n      observer = group\n\n    const keys = Object.keys(group)\n    keys.forEach(key => {\n      const getter = Object.getOwnPropertyDescriptor(group, key).get\n      values[key] = group[key]\n      Object.defineProperty(statee, key, {\n        enumerable: true,\n        get: getter || (() => values[key]),\n        set: getter ? undefined : (value => {\n          if (value === values[key])\n            return\n          keys.forEach(k => values[k] = group[k])\n          values[key] = value\n          observer && observe(key, value)\n        })\n      })\n    })\n  }\n\n  statee.toJSON = () => values\n  return typeof Object.seal === 'function'\n    ? Object.seal(statee)\n    : statee\n}\n"],"names":["statee","key","defaultValue","Error","value","const","observer","values","group","arguments","i","keys","Object","forEach","getter","getOwnPropertyDescriptor","get","defineProperty","enumerable","set","undefined","k","observe","length","toJSON","seal"],"mappings":"8LAAe,2BAEb,SAASA,EAAOC,EAAKC,GACnB,KAAMD,KAAOD,GACX,MAAM,IAAIG,MAAM,OAASF,EAAM,gBAEjC,gBAAOG,UAASJ,EAAOC,GAAOG,GAMhC,IAHAC,IACIC,EADEC,EAAS,iBAIbF,IAAMG,EAAQC,EAAUC,GACH,mBAAVF,IACTF,EAAWE,GAEbH,IAAMM,EAAOC,OAAOD,KAAKH,GACzBG,EAAKE,iBAAQZ,GACXI,IAAMS,EAASF,OAAOG,yBAAyBP,EAAOP,GAAKe,IAC3DT,EAAON,GAAOO,EAAMP,GACpBW,OAAOK,eAAejB,EAAQC,EAAK,CACjCiB,YAAY,EACZF,IAAKF,qBAAiBP,EAAON,IAC7BkB,IAAKL,OAASM,WAAahB,GACrBA,IAAUG,EAAON,KAErBU,EAAKE,iBAAQQ,UAAKd,EAAOc,GAAKb,EAAMa,KACpCd,EAAON,GAAOG,EACdE,GAAYgB,QAAQrB,EAAKG,UAjBxBM,EAAI,EAAGA,EAAID,UAAUc,OAAQb,SAwBtC,OADAV,EAAOwB,yBAAejB,GACQ,mBAAhBK,OAAOa,KACjBb,OAAOa,KAAKzB,GACZA"}